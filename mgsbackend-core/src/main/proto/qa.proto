syntax = "proto3";

option java_multiple_files = true;
option java_package = "com.mimiter.mgs.core";
option java_outer_classname = "QAProto";

service MyService {
    rpc GetAnswer (QARequest) returns (QAReply) {}

    rpc GetAnswerWithOpenQA (QARequest) returns (QAReply) {}

    rpc GetExhibitAlias(ExhibitLabelAliasRequest) returns (ExhibitLabelAliasReply) {}
}

message RpcExhibitText {
    int64 id = 1;
    string text = 2;
}

// The request message containing the question, the texts and the status.
// status = 2 requires pyecharts
message QARequest {
    string question = 1;
    repeated RpcExhibitText texts = 2;
    int32 status = 3;
}

message ExhibitLabelAliasRequest {
    repeated string texts = 1;
}

// The response message containing the best answer extracted from the texts with the text
message QAReply {
    string answer = 1;
    int64 text_id = 2;
    bool from_open_qa = 3;
}

message ExhibitLabelAliasReply {
    repeated string aliases = 1;
}