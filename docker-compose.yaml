version: "3"

networks:
  mgs:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.22.0.0/16

volumes:
  mysql-conf:
    driver: local
  mysql-files:
    driver: local
  mysql-logs:
    driver: local
  mysql-data:
    driver: local

  redis-conf:
    driver: local
  redis-data:
    driver: local
  
  es-conf:
    driver: local
  es-data:
    driver: local
  es-plugins:
    driver: local
  
  kibana-conf:
    driver: local
  kibana-data:
    driver: local

services:
  mysql:
    image: mysql:8.0.31
    container_name: mysql
    privileged: true
    restart: always
    networks:
      - mgs
    ports:
      - "3306:3306"
    volumes:
      - mysql-conf:/etc/mysql
      - mysql-files:/var/lib/mysql-files
      - mysql-logs:/var/log/mysql
      - mysql-data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_HOST: '%'
      MYSQL_DATABASE: mgs
  redis:
    image: redis:5.0.14
    container_name: redis 
    command: redis-server --requirepass ${REDIS_PASSWORD}  --appendonly yes
    restart: always
    networks:
      - mgs
    ports:
        - "6379:6379"
    volumes:
      - redis-conf:/usr/local/etc/redis
      - redis-data:/data
  setup-elasticsearch:
    image: elasticsearch:8.4.3
    networks:
      - mgs
    command: >
      bash -c '
        echo "Waiting for Elasticsearch availability";
        until curl -s elasticsearch:9200 | grep -q "missing authentication credentials"; do sleep 10; done;
        echo "Setting kibana_system password";
        until curl -s -X POST -u "elastic:${ELASTIC_PASSWORD}" -H "Content-Type: application/json" elasticsearch:9200/_security/user/kibana_system/_password -d "{\"password\":\"${KIBANA_PASSWORD}\"}" | grep -q "^{}"; do sleep 10; done; 
        echo "Done.";
      '
# ' 
  elasticsearch:
    image: elasticsearch:8.4.3
    container_name: elasticsearch
    restart: always
    depends_on:
      - setup-elasticsearch
    networks:
      - mgs
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - es-conf:/usr/share/elasticsearch/config
      - es-data:/usr/share/elasticsearch/data
      - es-plugins:/usr/share/elasticsearch/plugins
    environment:
      discovery.type: single-node
      ES_JAVA_OPTS: "-Xmx1024m"
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD}
      xpack.security.http.ssl.enabled: "false"
      xpack.security.transport.ssl.enabled: "false"
  kibana:
    image: kibana:8.4.3
    container_name: kibana
    restart: always
    depends_on:
      - elasticsearch
    networks:
      - mgs
    ports:
      - "5601:5601"
    volumes:
      - kibana-conf:/usr/share/kibana/conf
      - kibana-data:/usr/share/kibana/data
    environment:
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
      ELASTICSEARCH_USERNAME: kibana_system
      ELASTICSEARCH_PASSWORD: ${KIBANA_PASSWORD}
      SERVER_BASEPATH: /kibana
  filebeat:
    image: docker.elastic.co/beats/filebeat:8.4.3
    container_name: filebeat
    restart: always
    user: root
    command: filebeat -e --strict.perms=false
    depends_on:
      - elasticsearch
      - kibana
    networks:
      - mgs
    volumes:
      # see https://github.com/xeraa/java-logging/blob/master/docker-compose.yml
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - ./deployment/config/filebeat.docker.yml:/usr/share/filebeat/filebeat.yml:ro
      - ./filebeat-docker/registry/:/usr/share/filebeat/data/
      - ./filebeat-docker/logs/:/usr/share/filebeat/logs/
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      setup.kibana.host: kibana:5601
      ELASTICSEARCH_HOSTS: "['elasticsearch:9200']"
      ELASTICSEARCH_USERNAME: elastic
      ELASTICSEARCH_PASSWORD: ${ELASTIC_PASSWORD}

  mgsbackend-core:
    image: registry.musepedia.cn/mgs/backend-core:dev
    container_name: mgsbackend-core
    restart: always
    labels:
      co.elastic.logs/enable: "true"
      co.elastic.logs/multiline.pattern: '^\d{4}-\d{2}-\d{2}\s\d{2}:\d{2}:\d{2}\.\d{3}\s'
      co.elastic.logs/multiline.negate: "true"
      co.elastic.logs/multiline.match: after
    logging:
      driver: "json-file"
    depends_on:
      - mysql
      - redis
    networks:
      - mgs
    ports:
      - "16002:16002"
    environment:
      ENV_MYSQL_HOST: mysql:3306
      ENV_MYSQL_USER: root
      ENV_MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      ENV_REDIS_HOST: redis
      ENV_REDIS_PORT: 6379
      ENV_REDIS_PASSWORD: ${REDIS_PASSWORD}
      ENV_GRPC_HOST: mgs-core:5555
      ENV_GRPC_PAYMENT: mimiter-payment:15016
      ENV_GRPC_GPT:
      MGS_WEIXIN_APPID: ${WX_APPID}
      MGS_WEIXIN_SECRET: ${WX_SECRET}
      MGS_SMS_SECRETID: ${SMS_SECRETID}
      MGS_SMS_SECRETKEY: ${SMS_SECRETKEY}
      MGS_SMS_SDKAPPIID: ${SMS_SDKAPPID}
      MGS_SMS_SIGNNAME: ${SMS_SIGNNAME}
      MGS_SMS_TEMPLATEID: ${SMS_TEMPLATEID}
      SPRING_PROFILES_ACTIVE: test
  mgsbackend-admin:
    image: registry.musepedia.cn/mgs/backend-admin:dev
    container_name: mgsbackend-admin
    restart: always
    labels:
      co.elastic.logs/enable: "true"
      co.elastic.logs/multiline.pattern: '^\d{4}-\d{2}-\d{2}\s\d{2}:\d{2}:\d{2}\.\d{3}\s'
      co.elastic.logs/multiline.negate: "true"
      co.elastic.logs/multiline.match: after
    logging:
      driver: "json-file"
    depends_on:
      - mysql
      - redis
    networks:
      - mgs
    ports:
      - "16003:16003"
    environment:
      ENV_MYSQL_HOST: mysql:3306
      ENV_MYSQL_USER: root
      ENV_MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      ENV_REDIS_HOST: redis
      ENV_REDIS_PORT: 6379
      ENV_REDIS_PASSWORD: ${REDIS_PASSWORD}
      SPRING_PROFILES_ACTIVE: test
      ENV_COS_SECRETID: ${COS_SECRETID}
      ENV_COS_SECRETKEY: ${COS_SECRETKEY}